package homework;

import java.text.DecimalFormat;

public class HW6 {
    /**
     * Метод для тестов
     */
    public static void verifyEquals(String expRes, String actRes) {
        if (expRes.equals(actRes)) {
            System.out.println("Pass");
        } else {
            System.out.println("Fail");
        }
    }

    /**
     * Распечатать последовательность чисел от 0 до 9 включительно.
     */
    public static void Task1() {

        for (int i = 0; i <= 9; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел от 10 исключительно до 0 включительно.
     */
    public static void Task2() {

        for (int i = 9; i >= 0; i--) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел от 50 до 55 включительно с шагом 2.
     */
    public static void Task3() {

        for (int i = 50; i <= 55; i = i + 2) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел, кратных 7, в промежутке (327, 300)
     */
    public static void Task4() {

        for (int i = 300; i <= 327; i++) {
            if (i % 7 == 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел в промежутке [12, 13] с шагом 0.1
     */
    public static void Task5() {
        double i;
        for (i = 12; i <= 13; i = i + 0.1) {
            System.out.print(new DecimalFormat("#0.0").format(i) + " ");
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность четных чисел от 215 до 237 включительно
     */
    public static void Task6() {
        int i;
        for (i = 215; i <= 237; i++) {
            if (i % 2 == 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел, кратных 7, в промежутке от 7 исключительно до 14 исключительно.
     */
    public static void Task7() {
        int i;
        for (i = 8; i < 14; i++) {
            if (i % 7 == 0) {
                System.out.print(i + " ");
            } else if (i % 7 != 0) {
                System.out.println("Numbers are not founded.");
                break;
            }
        }
    }

    /**
     * Распечатать последовательность которая начинается с минимального значения типа данных short и заканчивается
     * максимальным значением short. Числа в последовательности должны быть кратны 15001.
     */
    public static void Task8() {
        short x = Short.MAX_VALUE;
        short y = Short.MIN_VALUE;
        short z;
        for (z = y; z <= x; z++) {
            if (z % 15001 == 0) {
                System.out.print(z + " ");
            }
        }
        System.out.println();
    }

    /**
     * Распечатать последовательность чисел в промежутке от -10 до 34 включительно. Числа, кратные 11, должныбыть
     * распечатаны синим цветом. Числа, кратные 12, должны быть распечатаны красным цветом. А нольнеобходимо распечатать
     * словом ZERO.
     */
    public static void Task9() {
        int i;
        for (i = -10; i <= 34; i++) {
            if (i == 0) {
                System.out.print("ZERO" + " ");
            } else if (i % 11 == 0) {
                System.out.print("\u001B[31m" + i + " " + "\u001B[0m");
            } else if (i % 12 == 0) {
                System.out.print("\u001B[34m" + i + " " + "\u001B[0m");
            } else {
                System.out.print(i + " ");
            }
        }
        System.out.println();
        //System.out.println("\u001B[0m"); можно в конце сбросить
    }

    /**
     * Написать метод, который принимает на вход параметры start,  end, step, и печатает последовательность десятичных
     * чисел, начиная с числа start, с шагом step. Точка выхода из цикла - число end.
     */
    public static void Task10(double start, double end, double step) {
        if(start < end && step > 0){
            for (start = start; start < end; start += step) {
                System.out.println(start);
            }
            }else if (start > end && step < 0){
            for (start = start; start > end; start += step){
            }
        }else {
            System.out.println("Invalid data.");
        }

    }

    /**
     * Написать метод, который принимает параметр l и печатает  последовательность четных чисел от нуля. Длина
     * последовательности = l.
     */
    public static void Task11() {
        int l = 50;
        for (int i = 0; i <= l; i += 2) {
            System.out.print(i + " ");
        }
    }

    /**
     * Напишите метод, который принимает целое число n, и выводит все степени числа 2 от 1 до n включительно
     */
    public static void Task12() {
        int n = 12;
        for (int pow = 1; pow <= n; pow++) {
            int x = (int) Math.pow(2, pow);
            System.out.print(x + " ");
        }
    }

    /**
     * Вывести последовательность 012345678900112233445566778899000…  до числа 9999 включительно.
     */
    public static void Task13() {
        for (int i = 1; i <= 4; i++) {                   //общее кол-во повторений
            for (int j = 0; j <= 9; j++) {              //кол-во цифр
                for (int k = 1; k <= i; k++) {          //текущее кол-во повторений
                    System.out.print(j);
                }
            }
        }
    }

    /**
     * Распечатайте последовательность чисел: 0, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5
     */
    public static void Task14() {

        for (int i = 0; i <= 5; i++) {
            System.out.print(i + "," + (i * -1) + ", ");
        }
    }

    /**
     * Распечатать последовательность чисел:0, 3, 5, 6, 9, 10, 12, 15, 18, 20, 21, 24, 25
     */
    public static void Task15() {
        for (int i = 0; i <= 25; i++) {
            if (i % 3 == 0 || i % 5 == 0)
                System.out.print(i + ", ");
        }
    }

    /**
     * Написать метод, который принимает параметры n, m, l, и печатает последовательность нечетных чисел
     * начиная с числа n, с шагом m, длина последовательности l.
     */
    public static void Task16() {
        int n = 1;
        int m = 3;
        int l = 27;

        for (int i = n; i <= l; i += m) {
            if (i % 2 != 0)
                System.out.print(i + " ");
        }
    }

    /**
     * Сгенерируйте и распечатайте последовательность по формуле:n + 1 = n + 2
     */
    public static void Task17(int n) {
        int l = n + 5;
        for(; n < l; n++){
            System.out.println("[" + (n + 1) + "]" + " = " + (n + 2));

        }
    }


    /**
     * Сгенерируйте последовательность целых положительных  двузначных чисел, в которых разница между первой цифрой
     * (десятки) и второй цифрой (единицы) не превышает 3.
     */
    public static void Task18() {

        for (int i = 10; i <= 99; i++) {
            int edenica = i % 10;
            int desatka = i / 10;
            int raznica = desatka - edenica;
            if (Math.abs(raznica) <= 3) {

                System.out.print(i + " ");
            }
        }
    }



    public static void main (String[]args){

            /**Распечатать последовательность чисел от 0 до 9 включительно.*/
                Task1();

            /**Распечатать последовательность чисел от 10 исключительно до 0 включительно.*/
                Task2();

            /**Распечатать последовательность чисел от 50 до 55 включительно с шагом 2.*/
                Task3();

            /**Распечатать последовательность чисел, кратных 7, в промежутке (327, 300)*/
                Task4();

            /**Распечатать последовательность чисел в промежутке [12, 13] с шагом 0.1*/
                Task5();

            /**Распечатать последовательность четных чисел от 215 до 237 включительно*/
                Task6();

            /**Распечатать последовательность чисел, кратных 7, в промежутке от 7 исключительно до 14 исключительно*/
                Task7();

            /**Распечатать последовательность которая начинается с минимального значения типа данных short и
             * заканчивается максимальным значением short. Числа в последовательности должны быть кратны 15001.*/
                Task8();

            /**Распечатать последовательность чисел в промежутке от -10 до 34 включительно. Числа, кратные 11, должны
             * быть распечатаны синим цветом. Числа, кратные 12, должны быть распечатаны красным цветом. А ноль
             * необходимо распечатать словом ZERO.*/
                Task9();

            /**Написать метод, который принимает на вход параметры start,  end, step, и печатает последовательность
             * десятичных  чисел, начиная с числа start, с шагом step. Точка выхода из цикла - число end.*/
                Task10(10.5, 20.75, 1.29);
                Task10(5.25, 0, 0);

            /**Написать метод, который принимает параметр  и печатает  последовательность четных чисел от нуля.
             * Длина последовательности = .*/
                Task11();

            /**Напишите метод, который принимает целое число n, и выводит все степени числа 2 от 1 до n включительно*/
                Task12();

            /**Вывести последовательность 012345678900112233445566778899000…  до числа 9999 включительно.*/
                Task13();

            /**Распечатайте последовательность чисел: 0, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5*/
                Task14();

            /**Распечатать последовательность чисел: 0, 3, 5, 6, 9, 10, 12, 15, 18, 20, 21, 24, 25 */
                Task15();

            /**Написать метод, который принимает параметры n, m, l, и печатает последовательность нечетных чисел
             * начиная с числа n, с шагом m, длина последовательности l.*/
                Task16();

            /**Сгенерируйте и распечатайте последовательность по формуле:n + 1 = n + 2*/
                Task17(1);

            /**Написать метод, который принимает параметры l, n, и печатает последовательность чисел, начиная с числа n,
            * по формуле для n + 1 члена последовательности: n + 1 = 2n. Длина последовательности  l.*/
                Task18(1, 10);


        }
    }
